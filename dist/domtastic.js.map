{"version":3,"file":"domtastic.js","sources":["../src/util.js","../src/selector/index.js","../src/array.js","../src/baseClass.js","../src/css.js","../src/dom/index.js","../src/dom/attr.js","../src/dom/class.js","../src/dom/contains.js","../src/dom/data.js","../src/dom/extra.js","../src/dom/html.js","../src/selector/closest.js","../src/event/index.js","../src/event/trigger.js","../src/event/ready.js","../src/noconflict.js","../src/selector/extra.js","../src/type.js","../src/index.js"],"sourcesContent":["/*\n * @module Util\n */\n\n/*\n * Reference to the global scope\n * @private\n */\n\nconst global = new Function(\"return this\")();\n\n/**\n * Convert `NodeList` to `Array`.\n *\n * @param {NodeList|Array} collection\n * @return {Array}\n * @private\n */\n\nfunction toArray(collection) {\n    let length = collection.length,\n        result = new Array(length);\n    for (let i = 0; i < length; i++) {\n        result[i] = collection[i];\n    }\n    return result;\n}\n\n/**\n * Faster alternative to [].forEach method\n *\n * @param {Node|NodeList|Array} collection\n * @param {Function} callback\n * @return {Node|NodeList|Array}\n * @private\n */\n\nfunction each(collection, callback, thisArg) {\n    let length = collection.length;\n    if (length !== undefined && collection.nodeType === undefined) {\n        for (let i = 0; i < length; i++){\n            callback.call(thisArg, collection[i], i, collection);\n        }\n    } else {\n        callback.call(thisArg, collection, 0, collection);\n    }\n    return collection;\n}\n\n/**\n * Assign enumerable properties from source object(s) to target object\n *\n * @method extend\n * @param {Object} target Object to extend\n * @param {Object} [source] Object to extend from\n * @return {Object} Extended object\n * @example\n *     $.extend({a: 1}, {b: 2});\n *     // {a: 1, b: 2}\n * @example\n *     $.extend({a: 1}, {b: 2}, {a: 3});\n *     // {a: 3, b: 2}\n */\n\nfunction extend(target, ...sources) {\n    sources.forEach(src => {\n        for (let prop in src) {\n            target[prop] = src[prop];\n        }\n    });\n    return target;\n}\n\n/**\n * Return the collection without duplicates\n *\n * @param collection Collection to remove duplicates from\n * @return {Node|NodeList|Array}\n * @private\n */\n\nconst uniq = collection => collection.filter((item, index) => collection.indexOf(item) === index);\n\n/*\n * Export interface\n */\n\nexport { global, toArray, each, extend, uniq };\n","/**\n * @module Selector\n */\n\nimport { global, each } from '../util';\n\nlet isPrototypeSet = false;\n\nconst reFragment = /^\\s*<(\\w+|!)[^>]*>/;\nconst reSingleTag = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/;\nconst reSimpleSelector = /^[\\.#]?[\\w-]*$/;\n\n/*\n * Versatile wrapper for `querySelectorAll`.\n *\n * @param {String|Node|NodeList|Array} selector Query selector, `Node`, `NodeList`, array of elements, or HTML fragment string.\n * @param {String|Node|NodeList} context=document The context for the selector to query elements.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     var $items = $(.items');\n * @example\n *     var $element = $(domElement);\n * @example\n *     var $list = $(nodeList, document.body);\n * @example\n *     var $element = $('<p>evergreen</p>');\n */\n\nfunction $(selector, context = document) {\n\n    let collection;\n\n    if (!selector) {\n\n        collection = document.querySelectorAll(null);\n\n    } else if (selector instanceof Wrapper) {\n\n        return selector;\n\n    } else if (typeof selector !== 'string') {\n\n        collection = selector.nodeType || selector === window ? [selector] : selector;\n\n    } else if (reFragment.test(selector)) {\n\n        collection = createFragment(selector);\n\n    } else {\n\n        context = typeof context === 'string' ? document.querySelector(context) : context.length ? context[0] : context;\n\n        collection = querySelector(selector, context);\n\n    }\n\n    return wrap(collection);\n\n}\n\n/*\n * Find descendants matching the provided `selector` for each element in the collection.\n *\n * @param {String|Node|NodeList|Array} selector Query selector, `Node`, `NodeList`, array of elements, or HTML fragment string.\n * @return {Object} The wrapped collection\n * @example\n *     $('.selector').find('.deep').$('.deepest');\n */\n\nfunction find(selector) {\n    let nodes = [];\n    each(this, node => {\n        each(querySelector(selector, node), child => {\n            if(nodes.indexOf(child) === -1) {\n                nodes.push(child);\n            }\n        });\n    });\n    return $(nodes);\n}\n\n/*\n * Returns `true` if the element would be selected by the specified selector string; otherwise, returns `false`.\n *\n * @param {Node} element Element to test\n * @param {String} selector Selector to match against element\n * @return {Boolean}\n *\n * @example\n *     $.matches(element, '.match');\n */\n\nlet matches = (function() {\n    let context = typeof Element !== 'undefined' ? Element.prototype : global,\n        _matches = context.matches || context.matchesSelector || context.mozMatchesSelector || context.msMatchesSelector || context.oMatchesSelector || context.webkitMatchesSelector;\n    return (element, selector) => {\n        return _matches.call(element, selector);\n    };\n})();\n\n/*\n * Use the faster `getElementById`, `getElementsByClassName` or `getElementsByTagName` over `querySelectorAll` if possible.\n *\n * @private\n * @param {String} selector Query selector.\n * @param {Node} context The context for the selector to query elements.\n * @return {Object} NodeList, HTMLCollection, or Array of matching elements (depending on method used).\n */\n\nfunction querySelector(selector, context) {\n\n    let isSimpleSelector = reSimpleSelector.test(selector);\n\n    if (isSimpleSelector) {\n        if (selector[0] === '#') {\n            let element = (context.getElementById ? context : document).getElementById(selector.slice(1));\n            return element ? [element] : [];\n        }\n        if (selector[0] === '.') {\n            return context.getElementsByClassName(selector.slice(1));\n        }\n        return context.getElementsByTagName(selector);\n    }\n\n    return context.querySelectorAll(selector);\n\n}\n\n/*\n * Create DOM fragment from an HTML string\n *\n * @private\n * @param {String} html String representing HTML.\n * @return {NodeList}\n */\n\nfunction createFragment(html) {\n\n    if (reSingleTag.test(html)) {\n        return [document.createElement(RegExp.$1)];\n    }\n\n    let elements = [],\n        container = document.createElement('div'),\n        children = container.childNodes;\n\n    container.innerHTML = html;\n\n    for (let i = 0, l = children.length; i < l; i++) {\n        elements.push(children[i]);\n    }\n\n    return elements;\n}\n\n/*\n * Calling `$(selector)` returns a wrapped collection of elements.\n *\n * @private\n * @param {NodeList|Array} collection Element(s) to wrap.\n * @return (Object) The wrapped collection\n */\n\nfunction wrap(collection) {\n\n    if (!isPrototypeSet) {\n        Wrapper.prototype = $.fn;\n        Wrapper.prototype.constructor = Wrapper;\n        isPrototypeSet = true;\n    }\n\n    return new Wrapper(collection);\n}\n\n/*\n * Constructor for the Object.prototype strategy\n *\n * @constructor\n * @private\n * @param {NodeList|Array} collection Element(s) to wrap.\n */\n\nfunction Wrapper(collection) {\n    let i = 0, length = collection.length;\n    for (; i < length;) {\n        this[i] = collection[i++];\n    }\n    this.length = length;\n}\n\n/*\n * Export interface\n */\n\nexport { $, find, matches, Wrapper };\n","/**\n * @module Array\n */\n\nimport { each as _each, toArray } from './util';\nimport { $, matches } from './selector/index';\n\nconst ArrayProto = Array.prototype;\n\n/**\n * Checks if the given callback returns a true(-ish) value for each element in the collection.\n *\n * @param {Function} callback Function to execute for each element, invoked with `element` as argument.\n * @param {Object} [thisArg] Value to use as `this` when executing `callback`.\n * @return {Boolean} Whether each element passed the callback check.\n * @example\n *     $('.items').every(function(element) {\n *         return element.hasAttribute('active')\n *     });\n *     // true/false\n */\n\nconst every = ArrayProto.every;\n\n/**\n * Filter the collection by selector or function, and return a new collection with the result.\n *\n * @param {String|Function} selector Selector or function to filter the collection.\n * @param {Object} [thisArg] Value to use as `this` when executing `callback`.\n * @return {Object} A new wrapped collection\n * @chainable\n * @example\n *     $('.items').filter('.active');\n * @example\n *     $('.items').filter(function(element) {\n *         return element.hasAttribute('active')\n *     });\n */\n\nfunction filter(selector, thisArg) {\n    const callback = typeof selector === 'function' ? selector : element => matches(element, selector);\n    return $(ArrayProto.filter.call(this, callback, thisArg));\n}\n\n/**\n * Execute a function for each element in the collection.\n *\n * @param {Function} callback Function to execute for each element, invoked with `element` as argument.\n * @param {Object} [thisArg] Value to use as `this` when executing `callback`.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.items').forEach(function(element) {\n *         element.style.color = 'evergreen';\n *     );\n */\n\nfunction forEach(callback, thisArg) {\n    return _each(this, callback, thisArg);\n}\n\nconst each = forEach;\n\n/**\n * Returns the index of an element in the collection.\n *\n * @param {Node} element\n * @return {Number} The zero-based index, -1 if not found.\n * @example\n *     $('.items').indexOf(element);\n *     // 2\n */\n\nconst indexOf = ArrayProto.indexOf;\n\n/**\n * Create a new collection by executing the callback for each element in the collection.\n *\n * @param {Function} callback Function to execute for each element, invoked with `element` as argument.\n * @param {Object} [thisArg] Value to use as `this` when executing `callback`.\n * @return {Array} Collection with the return value of the executed callback for each element.\n * @example\n *     $('.items').map(function(element) {\n *         return element.getAttribute('name')\n *     });\n *     // ['ever', 'green']\n */\n\nconst map = ArrayProto.map;\n\n/**\n * Removes the last element from the collection, and returns that element.\n *\n * @return {Object} The last element from the collection.\n * @example\n *     var lastElement = $('.items').pop();\n */\n\nconst pop = ArrayProto.pop;\n\n/**\n * Adds one or more elements to the end of the collection, and returns the new length of the collection.\n *\n * @param {Object} element Element(s) to add to the collection\n * @return {Number} The new length of the collection\n * @example\n *     $('.items').push(element);\n */\n\nconst push = ArrayProto.push;\n\n/**\n * Apply a function against each element in the collection, and this accumulator function has to reduce it\n * to a single value.\n *\n * @param {Function} callback Function to execute on each value in the array, taking four arguments (see example).\n * @param {Mixed} initialValue Object to use as the first argument to the first call of the callback.\n * @example\n *     $('.items').reduce(function(previousValue, element, index, collection) {\n *         return previousValue + element.clientHeight;\n *     }, 0);\n *     // [total height of elements]\n */\n\nconst reduce = ArrayProto.reduce;\n\n/**\n * Apply a function against each element in the collection (from right-to-left), and this accumulator function has\n * to reduce it to a single value.\n *\n * @param {Function} callback Function to execute on each value in the array, taking four arguments (see example).\n * @param {Mixed} initialValue Object to use as the first argument to the first call of the callback.\n * @example\n *     $('.items').reduceRight(function(previousValue, element, index, collection) {\n *         return previousValue + element.textContent;\n *     }, '')\n *     // [reversed text of elements]\n */\n\nconst reduceRight = ArrayProto.reduceRight;\n\n/**\n * Reverses an array in place. The first array element becomes the last and the last becomes the first.\n *\n * @return {Object} The wrapped collection, reversed\n * @chainable\n * @example\n *     $('.items').reverse();\n */\n\nfunction reverse() {\n    return $(toArray(this).reverse());\n}\n\n/**\n * Removes the first element from the collection, and returns that element.\n *\n * @return {Object} The first element from the collection.\n * @example\n *     var firstElement = $('.items').shift();\n */\n\nconst shift = ArrayProto.shift;\n\n/**\n * Checks if the given callback returns a true(-ish) value for any of the elements in the collection.\n *\n * @param {Function} callback Function to execute for each element, invoked with `element` as argument.\n * @return {Boolean} Whether any element passed the callback check.\n * @example\n *     $('.items').some(function(element) {\n *         return element.hasAttribute('active')\n *     });\n *     // true/false\n */\n\nconst some = ArrayProto.some;\n\n/**\n * Adds one or more elements to the beginning of the collection, and returns the new length of the collection.\n *\n * @param {Object} element Element(s) to add to the collection\n * @return {Number} The new length of the collection\n * @example\n *     $('.items').unshift(element);\n */\n\nconst unshift = ArrayProto.unshift;\n\n/*\n * Export interface\n */\n\nexport { each, every, filter, forEach, indexOf, map, pop, push, reduce, reduceRight, reverse, shift, some, unshift };\n","/**\n * @module BaseClass\n */\n\nimport { $ as selector, Wrapper } from './selector/index';\nimport { extend } from './util';\n\nexport default function(api) {\n\n    /**\n     * Provide subclass for classes or components to extend from.\n     * The opposite and successor of plugins (no need to extend `$.fn` anymore, complete control).\n     *\n     * @return {Class} The class to extend from, including all `$.fn` methods.\n     * @example\n     *     import { BaseClass } from  'domtastic';\n     *\n     *     class MyComponent extends BaseClass {\n     *         doSomething() {\n     *             return this.addClass('.foo');\n     *         }\n     *     }\n     *\n     *     let component = new MyComponent('body');\n     *     component.doSomething();\n     *\n     * @example\n     *     import $ from  'domtastic';\n     *\n     *     class MyComponent extends $.BaseClass {\n     *         progress(value) {\n     *             return this.attr('data-progress', value);\n     *         }\n     *     }\n     *\n     *     let component = new MyComponent(document.body);\n     *     component.progress('ive').append('<p>enhancement</p>');\n     */\n\n    class BaseClass {\n        constructor() {\n            Wrapper.call(this, selector(...arguments));\n        }\n    }\n    extend(BaseClass.prototype, api);\n    return BaseClass;\n}\n","/**\n * @module CSS\n */\n\nimport { each } from './util';\n\nconst isNumeric = value => !isNaN(parseFloat(value)) && isFinite(value);\n\nconst camelize = value => value.replace(/-([\\da-z])/gi, (matches, letter) => letter.toUpperCase());\n\nconst dasherize = value => value.replace(/([a-z\\d])([A-Z])/g, '$1-$2').toLowerCase();\n\n/**\n * Get the value of a style property for the first element, or set one or more style properties for each element in the collection.\n *\n * @param {String|Object} key The name of the style property to get or set. Or an object containing key-value pairs to set as style properties.\n * @param {String} [value] The value of the style property to set.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').css('padding-left'); // get\n *     $('.item').css('color', '#f00'); // set\n *     $('.item').css({'border-width': '1px', display: 'inline-block'}); // set multiple\n */\n\nfunction css(key, value) {\n\n    let styleProps, prop, val;\n\n    if(typeof key === 'string') {\n        key = camelize(key);\n\n        if (typeof value === 'undefined') {\n            let element = this.nodeType ? this : this[0];\n            if(element) {\n                val = element.style[key];\n                return isNumeric(val) ? parseFloat(val) : val;\n            }\n            return undefined;\n        }\n\n        styleProps = {};\n        styleProps[key] = value;\n    } else {\n        styleProps = key;\n        for (prop in styleProps) {\n            val = styleProps[prop];\n            delete styleProps[prop];\n            styleProps[camelize(prop)] = val;\n        }\n    }\n\n    each(this, element => {\n        for (prop in styleProps) {\n            if(styleProps[prop] || styleProps[prop] === 0) {\n                element.style[prop] = styleProps[prop];\n            } else {\n                element.style.removeProperty(dasherize(prop));\n            }\n        }\n    });\n\n    return this;\n}\n\n/*\n * Export interface\n */\n\nexport { css };\n","/**\n * @module DOM\n */\n\nimport { toArray } from '../util';\nimport { $ } from '../selector/index';\n\nconst forEach = Array.prototype.forEach;\n\n/**\n * Append element(s) to each element in the collection.\n *\n * @param {String|Node|NodeList|Object} element What to append to the element(s).\n * Clones elements as necessary.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').append('<p>more</p>');\n */\n\nfunction append(element) {\n    if (this instanceof Node) {\n        if (typeof element === 'string') {\n            this.insertAdjacentHTML('beforeend', element);\n        } else {\n            if (element instanceof Node) {\n                this.appendChild(element);\n            } else {\n                let elements = element instanceof NodeList ? toArray(element) : element;\n                forEach.call(elements, this.appendChild.bind(this));\n            }\n        }\n    } else {\n        _each(this, append, element);\n    }\n    return this;\n}\n\n/**\n * Place element(s) at the beginning of each element in the collection.\n *\n * @param {String|Node|NodeList|Object} element What to place at the beginning of the element(s).\n * Clones elements as necessary.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').prepend('<span>start</span>');\n */\n\nfunction prepend(element) {\n    if (this instanceof Node) {\n        if (typeof element === 'string') {\n            this.insertAdjacentHTML('afterbegin', element);\n        } else {\n            if (element instanceof Node) {\n                this.insertBefore(element, this.firstChild);\n            } else {\n                let elements = element instanceof NodeList ? toArray(element) : element;\n                forEach.call(elements.reverse(), prepend.bind(this));\n            }\n        }\n    } else {\n        _each(this, prepend, element);\n    }\n    return this;\n}\n\n/**\n * Place element(s) before each element in the collection.\n *\n * @param {String|Node|NodeList|Object} element What to place as sibling(s) before to the element(s).\n * Clones elements as necessary.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.items').before('<p>prefix</p>');\n */\n\nfunction before(element) {\n    if (this instanceof Node) {\n        if (typeof element === 'string') {\n            this.insertAdjacentHTML('beforebegin', element);\n        } else {\n            if (element instanceof Node) {\n                this.parentNode.insertBefore(element, this);\n            } else {\n                let elements = element instanceof NodeList ? toArray(element) : element;\n                forEach.call(elements, before.bind(this));\n            }\n        }\n    } else {\n        _each(this, before, element);\n    }\n    return this;\n}\n\n/**\n * Place element(s) after each element in the collection.\n *\n * @param {String|Node|NodeList|Object} element What to place as sibling(s) after to the element(s). Clones elements as necessary.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.items').after('<span>suf</span><span>fix</span>');\n */\n\nfunction after(element) {\n    if (this instanceof Node) {\n        if (typeof element === 'string') {\n            this.insertAdjacentHTML('afterend', element);\n        } else {\n            if (element instanceof Node) {\n                this.parentNode.insertBefore(element, this.nextSibling);\n            } else {\n                let elements = element instanceof NodeList ? toArray(element) : element;\n                forEach.call(elements.reverse(), after.bind(this));\n            }\n        }\n    } else {\n        _each(this, after, element);\n    }\n    return this;\n}\n\n/**\n * Clone a wrapped object.\n *\n * @return {Object} Wrapped collection of cloned nodes.\n * @example\n *     $(element).clone();\n */\n\nfunction clone() {\n    return $(_clone(this));\n}\n\n/**\n * Clone an object\n *\n * @param {String|Node|NodeList|Array} element The element(s) to clone.\n * @return {String|Node|NodeList|Array} The cloned element(s)\n * @private\n */\n\nfunction _clone(element) {\n    if (typeof element === 'string') {\n        return element;\n    } else if (element instanceof Node) {\n        return element.cloneNode(true);\n    } else if ('length' in element) {\n        return [].map.call(element, function(el) {\n            return el.cloneNode(true);\n        });\n    }\n    return element;\n}\n\n/**\n * Specialized iteration, applying `fn` in reversed manner to a clone of each element, but the provided one.\n *\n * @param {NodeList|Array} collection\n * @param {Function} fn\n * @param {Node} element\n * @private\n */\n\nfunction _each(collection, fn, element) {\n    let l = collection.length;\n    while (l--) {\n        let elm = l === 0 ? element : _clone(element);\n        fn.call(collection[l], elm);\n    }\n}\n\n/*\n * Export interface\n */\n\nexport { append, prepend, before, after, clone };\n","/**\n * @module Attr\n */\n\nimport { each } from '../util';\n\n/**\n * Get the value of an attribute for the first element, or set one or more attributes for each element in the collection.\n *\n * @param {String|Object} key The name of the attribute to get or set. Or an object containing key-value pairs to set as attributes.\n * @param {String} [value] The value of the attribute to set.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').attr('attrName'); // get\n *     $('.item').attr('attrName', 'attrValue'); // set\n *     $('.item').attr({attr1: 'value1', 'attr-2': 'value2'}); // set multiple\n */\n\nfunction attr(key, value) {\n\n    if (typeof key === 'string' && typeof value === 'undefined') {\n        let element = this.nodeType ? this : this[0];\n        return element ? element.getAttribute(key) : undefined;\n    }\n\n    each(this, element => {\n        if (typeof key === 'object') {\n            for (let attr in key) {\n                element.setAttribute(attr, key[attr]);\n            }\n        } else {\n            element.setAttribute(key, value);\n        }\n    });\n\n    return this;\n}\n\n/**\n * Remove attribute from each element in the collection.\n *\n * @param {String} key Attribute name\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.items').removeAttr('attrName');\n */\n\nfunction removeAttr(key) {\n    each(this, element => element.removeAttribute(key));\n    return this;\n}\n\n/*\n * Export interface\n */\n\nexport { attr, removeAttr };\n","/**\n * @module Class\n */\n\nimport { each } from '../util';\n\n/**\n * Add a class to the element(s)\n *\n * @param {String} value Space-separated class name(s) to add to the element(s).\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').addClass('bar');\n *     $('.item').addClass('bar foo');\n */\n\nfunction addClass(value) {\n    if(value && value.length) {\n        each(value.split(' '), _each.bind(this, 'add'));\n    }\n    return this;\n}\n\n/**\n * Remove a class from the element(s)\n *\n * @param {String} value Space-separated class name(s) to remove from the element(s).\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.items').removeClass('bar');\n *     $('.items').removeClass('bar foo');\n */\n\nfunction removeClass(value) {\n    if(value && value.length) {\n        each(value.split(' '), _each.bind(this, 'remove'));\n    }\n    return this;\n}\n\n/**\n * Toggle a class at the element(s)\n *\n * @param {String} value Space-separated class name(s) to toggle at the element(s).\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').toggleClass('bar');\n *     $('.item').toggleClass('bar foo');\n */\n\nfunction toggleClass(value) {\n    if(value && value.length) {\n        each(value.split(' '), _each.bind(this, 'toggle'));\n    }\n    return this;\n}\n\n/**\n * Check if the element(s) have a class.\n *\n * @param {String} value Check if the DOM element contains the class name. When applied to multiple elements,\n * returns `true` if _any_ of them contains the class name.\n * @return {Boolean} Whether the element's class attribute contains the class name.\n * @example\n *     $('.item').hasClass('bar');\n */\n\nfunction hasClass(value) {\n    return (this.nodeType ? [this] : this).some(element => element.classList.contains(value));\n}\n\n/**\n * Specialized iteration, applying `fn` of the classList API to each element.\n *\n * @param {String} fnName\n * @param {String} className\n * @private\n */\n\nfunction _each(fnName, className) {\n    each(this, element => element.classList[fnName](className));\n}\n\n/*\n * Export interface\n */\n\nexport { addClass, removeClass, toggleClass, hasClass };\n","/**\n * @module contains\n */\n\n/**\n * Test whether an element contains another element in the DOM.\n *\n * @param {Element} container The element that may contain the other element.\n * @param {Element} element The element that may be a descendant of the other element.\n * @return {Boolean} Whether the `container` element contains the `element`.\n * @example\n *     $.contains(parentElement, childElement);\n *     // true/false\n */\n\nfunction contains(container, element) {\n    if(!container || !element || container === element) {\n        return false;\n    } else if (container.contains) {\n        return container.contains(element);\n    } else if (container.compareDocumentPosition) {\n        return !(container.compareDocumentPosition(element) & Node.DOCUMENT_POSITION_DISCONNECTED);\n    }\n    return false;\n}\n\n\n/*\n * Export interface\n */\n\nexport { contains };\n","/**\n * @module Data\n */\n\nimport { each } from '../util';\n\nconst DATAKEYPROP = '__DOMTASTIC_DATA__';\n\n/**\n * Get data from first element, or set data for each element in the collection.\n *\n * @param {String} key The key for the data to get or set.\n * @param {String} [value] The data to set.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').data('attrName'); // get\n *     $('.item').data('attrName', {any: 'data'}); // set\n */\n\nfunction data(key, value) {\n\n    if (typeof key === 'string' && typeof value === 'undefined') {\n        let element = this.nodeType ? this : this[0];\n        return element && element[DATAKEYPROP] ? element[DATAKEYPROP][key] : undefined;\n    }\n\n    each(this, element => {\n        element[DATAKEYPROP] = element[DATAKEYPROP] || {};\n        element[DATAKEYPROP][key] = value;\n    });\n\n    return this;\n\n}\n\n/**\n * Get property from first element, or set property on each element in the collection.\n *\n * @param {String} key The name of the property to get or set.\n * @param {String} [value] The value of the property to set.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').prop('attrName'); // get\n *     $('.item').prop('attrName', 'attrValue'); // set\n */\n\nfunction prop(key, value) {\n\n    if (typeof key === 'string' && typeof value === 'undefined') {\n        let element = this.nodeType ? this : this[0];\n        return element && element ? element[key] : undefined;\n    }\n\n    each(this, element => element[key] = value);\n\n    return this;\n\n}\n\n\n/*\n * Export interface\n */\n\nexport { data, prop };\n","/**\n * @module DOM (extra)\n */\n\nimport { each } from '../util';\nimport { append, before, after } from './index';\nimport { $ } from '../selector/index';\n\n/**\n * Append each element in the collection to the specified element(s).\n *\n * @param {Node|NodeList|Object} element What to append the element(s) to. Clones elements as necessary.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').appendTo(container);\n */\n\nfunction appendTo(element) {\n    let context = typeof element === 'string' ? $(element) : element;\n    append.call(context, this);\n    return this;\n}\n\n/*\n * Empty each element in the collection.\n *\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').empty();\n */\n\nfunction empty(){\n    return each(this, element => element.innerHTML = '');\n}\n\n/**\n * Remove the collection from the DOM.\n *\n * @return {Array} Array containing the removed elements\n * @example\n *     $('.item').remove();\n */\n\nfunction remove() {\n    return each(this, element => {\n        if (element.parentNode) {\n            element.parentNode.removeChild(element);\n        }\n    });\n}\n\n/**\n * Replace each element in the collection with the provided new content, and return the array of elements that were replaced.\n *\n * @return {Array} Array containing the replaced elements\n */\n\nfunction replaceWith() {\n    return before.apply(this, arguments).remove();\n}\n\n/**\n * Get the `textContent` from the first, or set the `textContent` of each element in the collection.\n *\n * @param {String} [value]\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').text('New content');\n */\n\nfunction text(value){\n\n    if(value === undefined) {\n        return this[0].textContent;\n    }\n\n    each(this, element => element.textContent = '' + value);\n\n    return this;\n}\n\n/**\n * Get the `value` from the first, or set the `value` of each element in the collection.\n *\n * @param {String} [value]\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('input.firstName').value('New value');\n */\n\nfunction val(value){\n\n    if(value === undefined) {\n        return this[0].value;\n    }\n\n    each(this, element => element.value = value);\n\n    return this;\n}\n\n/*\n * Export interface\n */\n\nexport { appendTo, empty, remove, replaceWith, text, val };\n","/**\n * @module HTML\n */\n\nimport { each } from '../util';\n\n/*\n * Get the HTML contents of the first element, or set the HTML contents for each element in the collection.\n *\n * @param {String} [fragment] HTML fragment to set for the element. If this argument is omitted, the HTML contents are returned.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').html();\n *     $('.item').html('<span>more</span>');\n */\n\nfunction html(fragment) {\n\n    if (typeof fragment !== 'string') {\n        let element = this.nodeType ? this : this[0];\n        return element ? element.innerHTML : undefined;\n    }\n\n    each(this, element => element.innerHTML = fragment);\n\n    return this;\n\n}\n\n/*\n * Export interface\n */\n\nexport { html };\n","/**\n * @module closest\n */\n\nimport { $, matches } from './index';\nimport { each, uniq } from '../util';\n\n/**\n * Return the closest element matching the selector (starting by itself) for each element in the collection.\n *\n * @param {String} selector Filter\n * @param {Object} [context] If provided, matching elements must be a descendant of this element\n * @return {Object} New wrapped collection (containing zero or one element)\n * @chainable\n * @example\n *     $('.selector').closest('.container');\n */\n\nlet closest = (function() {\n\n    function closest(selector, context) {\n        let nodes = [];\n        each(this, node => {\n            while (node && node !== context) {\n                if (matches(node, selector)) {\n                    nodes.push(node);\n                    break;\n                }\n                node = node.parentElement;\n            }\n        });\n        return $(uniq(nodes));\n    }\n\n    return typeof Element === 'undefined' || !Element.prototype.closest ? closest : function(selector, context) {\n        if(!context) {\n            let nodes = [];\n            each(this, function(node) {\n                let n = node.closest(selector);\n                if(n) {\n                    nodes.push(n);\n                }\n            });\n            return $(uniq(nodes));\n        } else {\n            return closest.call(this, selector, context);\n        }\n    };\n})();\n\n/*\n * Export interface\n */\n\nexport { closest };\n","/**\n * @module Events\n */\n\nimport { each } from '../util';\nimport { closest } from '../selector/closest';\n\n/**\n * Shorthand for `addEventListener`. Supports event delegation if a filter (`selector`) is provided.\n *\n * @param {String} eventNames List of space-separated event types to be added to the element(s)\n * @param {String} [selector] Selector to filter descendants that delegate the event to this element.\n * @param {Function} handler Event handler\n * @param {Boolean} useCapture=false\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').on('click', callback);\n *     $('.container').on('click focus', '.item', handler);\n */\n\nfunction on(eventNames, selector, handler, useCapture, once) {\n\n    if (typeof selector === 'function') {\n        handler = selector;\n        selector = null;\n    }\n\n    let parts,\n        namespace,\n        eventListener;\n\n    eventNames.split(' ').forEach(eventName => {\n\n        parts = eventName.split('.');\n        eventName = parts[0] || null;\n        namespace = parts[1] || null;\n\n        eventListener = proxyHandler(handler);\n\n        each(this, element => {\n\n            if (selector) {\n                eventListener = delegateHandler.bind(element, selector, eventListener);\n            }\n\n            if(once) {\n                const listener = eventListener;\n                eventListener = event => {\n                    off.call(element, eventNames, selector, handler, useCapture);\n                    listener.call(element, event);\n                }\n            }\n\n            element.addEventListener(eventName, eventListener, useCapture || false);\n\n            getHandlers(element).push({\n                eventName: eventName,\n                handler: handler,\n                eventListener: eventListener,\n                selector: selector,\n                namespace: namespace\n            });\n        });\n\n    }, this);\n\n    return this;\n}\n\n/**\n * Shorthand for `removeEventListener`.\n *\n * @param {String} eventNames List of space-separated event types to be removed from the element(s)\n * @param {String} [selector] Selector to filter descendants that undelegate the event to this element.\n * @param {Function} handler Event handler\n * @param {Boolean} useCapture=false\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').off('click', callback);\n *     $('#my-element').off('myEvent myOtherEvent');\n *     $('.item').off();\n */\n\nfunction off(eventNames = '', selector, handler, useCapture) {\n\n    if (typeof selector === 'function') {\n        handler = selector;\n        selector = null;\n    }\n\n    let parts,\n        namespace,\n        handlers;\n\n    eventNames.split(' ').forEach(eventName => {\n\n        parts = eventName.split('.');\n        eventName = parts[0] || null;\n        namespace = parts[1] || null;\n\n        each(this, element => {\n\n            handlers = getHandlers(element);\n\n            each(handlers.filter(item => {\n                return (\n                    (!eventName || item.eventName === eventName) &&\n                    (!namespace || item.namespace === namespace) &&\n                    (!handler || item.handler === handler) &&\n                    (!selector || item.selector === selector));\n            }), item => {\n                element.removeEventListener(item.eventName, item.eventListener, useCapture || false);\n                handlers.splice(handlers.indexOf(item), 1);\n            });\n\n            if (!eventName && !namespace && !selector && !handler) {\n                clearHandlers(element);\n            } else if (handlers.length === 0) {\n                clearHandlers(element);\n            }\n\n        });\n\n    }, this);\n\n    return this;\n}\n\n/**\n * Add event listener and execute the handler at most once per element.\n *\n * @param eventNames\n * @param selector\n * @param handler\n * @param useCapture\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').one('click', callback);\n */\n\nfunction one(eventNames, selector, handler, useCapture) {\n    return on.call(this, eventNames, selector, handler, useCapture, 1);\n}\n\n/**\n * Get event handlers from an element\n *\n * @private\n * @param {Node} element\n * @return {Array}\n */\n\nconst eventKeyProp = '__domtastic_event__';\nlet id = 1;\nlet handlers = {};\nlet unusedKeys = [];\n\nfunction getHandlers(element) {\n    if (!element[eventKeyProp]) {\n        element[eventKeyProp] = unusedKeys.length === 0 ? ++id : unusedKeys.pop();\n    }\n    let key = element[eventKeyProp];\n    return handlers[key] || (handlers[key] = []);\n}\n\n/**\n * Clear event handlers for an element\n *\n * @private\n * @param {Node} element\n */\n\nfunction clearHandlers(element) {\n    let key = element[eventKeyProp];\n    if (handlers[key]) {\n        handlers[key] = null;\n        element[key] = null;\n        unusedKeys.push(key);\n    }\n}\n\n/**\n * Function to create a handler that augments the event object with some extra methods,\n * and executes the callback with the event and the event data (i.e. `event.detail`).\n *\n * @private\n * @param handler Callback to execute as `handler(event, data)`\n * @return {Function}\n */\n\nfunction proxyHandler(handler) {\n    return function(event) {\n        handler.call(this, augmentEvent(event), event.detail);\n    };\n}\n\n/**\n * Attempt to augment events and implement something closer to DOM Level 3 Events.\n *\n * @private\n * @param {Object} event\n * @return {Function}\n */\n\nlet augmentEvent = (function() {\n\n    let methodName,\n        eventMethods = {\n            preventDefault: 'isDefaultPrevented',\n            stopImmediatePropagation: 'isImmediatePropagationStopped',\n            stopPropagation: 'isPropagationStopped'\n        },\n        returnTrue = () => true,\n        returnFalse = () => false;\n\n    return event => {\n        if (!event.isDefaultPrevented || event.stopImmediatePropagation || event.stopPropagation) {\n            for (methodName in eventMethods) {\n                (function(methodName, testMethodName, originalMethod) {\n                    event[methodName] = function() {\n                        this[testMethodName] = returnTrue;\n                        return originalMethod && originalMethod.apply(this, arguments);\n                    };\n                    event[testMethodName] = returnFalse;\n                }(methodName, eventMethods[methodName], event[methodName]));\n            }\n            if (event._preventDefault) {\n                event.preventDefault();\n            }\n        }\n        return event;\n    };\n\n})();\n\n/**\n * Function to test whether delegated events match the provided `selector` (filter),\n * if the event propagation was stopped, and then actually call the provided event handler.\n * Use `this` instead of `event.currentTarget` on the event object.\n *\n * @private\n * @param {String} selector Selector to filter descendants that undelegate the event to this element.\n * @param {Function} handler Event handler\n * @param {Event} event\n */\n\nfunction delegateHandler(selector, handler, event) {\n    let eventTarget = event._target || event.target,\n        currentTarget = closest.call([eventTarget], selector, this)[0];\n    if (currentTarget && currentTarget !== this) {\n        if (currentTarget === eventTarget || !(event.isPropagationStopped && event.isPropagationStopped())) {\n            handler.call(currentTarget, event);\n        }\n    }\n}\n\nlet bind = on,\n    unbind = off;\n\n/*\n * Export interface\n */\n\nexport { on, off, one, bind, unbind };\n","/**\n * @module trigger\n */\n\nimport { global, each } from '../util';\nimport { contains } from '../dom/contains';\n\nconst reMouseEvent = /^(?:mouse|pointer|contextmenu)|click/;\nconst reKeyEvent = /^key/;\n\n/**\n * Trigger event at element(s)\n *\n * @param {String} type Type of the event\n * @param {Object} data Data to be sent with the event (`params.detail` will be set to this).\n * @param {Object} [params] Event parameters (optional)\n * @param {Boolean} params.bubbles=true Does the event bubble up through the DOM or not.\n * @param {Boolean} params.cancelable=true Is the event cancelable or not.\n * @param {Mixed} params.detail=undefined Additional information about the event.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').trigger('anyEventType');\n */\n\nfunction trigger(type, data, { bubbles = true, cancelable = true, preventDefault = false } = {}) {\n\n    let EventConstructor = getEventConstructor(type),\n        event = new EventConstructor(type, { bubbles, cancelable, preventDefault, detail: data});\n\n    event._preventDefault = preventDefault;\n\n    each(this, element => {\n        if (!bubbles || isEventBubblingInDetachedTree || isAttachedToDocument(element)) {\n            dispatchEvent(element, event);\n        } else {\n            triggerForPath(element, type, { bubbles, cancelable, preventDefault, detail: data});\n        }\n    });\n    return this;\n}\n\nfunction getEventConstructor(type) {\n    return supportsOtherEventConstructors ? (reMouseEvent.test(type) ? MouseEvent : (reKeyEvent.test(type) ? KeyboardEvent : CustomEvent)) : CustomEvent;\n}\n\n/**\n * Trigger event at first element in the collection. Similar to `trigger()`, except:\n *\n * - Event does not bubble\n * - Default event behavior is prevented\n * - Only triggers handler for first matching element\n *\n * @param {String} type Type of the event\n * @param {Object} data Data to be sent with the event\n * @example\n *     $('form').triggerHandler('submit');\n */\n\nfunction triggerHandler(type, data) {\n    if (this[0]) {\n        trigger.call(this[0], type, data, {bubbles: false, preventDefault: true});\n    }\n}\n\n/**\n * Check whether the element is attached to (or detached from) the document\n *\n * @private\n * @param {Node} element Element to test\n * @return {Boolean}\n */\n\nfunction isAttachedToDocument(element) {\n    if (element === window || element === document) {\n        return true;\n    }\n    return contains(element.ownerDocument.documentElement, element);\n}\n\n/**\n * Dispatch the event at the element and its ancestors.\n * Required to support delegated events in browsers that don't bubble events in detached DOM trees.\n *\n * @private\n * @param {Node} element First element to dispatch the event at\n * @param {String} type Type of the event\n * @param {Object} [params] Event parameters (optional)\n * @param {Boolean} params.bubbles=true Does the event bubble up through the DOM or not.\n * Will be set to false (but shouldn't matter since events don't bubble anyway).\n * @param {Boolean} params.cancelable=true Is the event cancelable or not.\n * @param {Mixed} params.detail=undefined Additional information about the event.\n */\n\nfunction triggerForPath(element, type, params = {}) {\n    params.bubbles = false;\n    let event = new CustomEvent(type, params);\n    event._target = element;\n    do {\n        dispatchEvent(element, event);\n    } while (element = element.parentNode);\n}\n\n/**\n * Dispatch event to element, but call direct event methods instead if available\n * (e.g. \"blur()\", \"submit()\") and if the event is non-cancelable.\n *\n * @private\n * @param {Node} element Element to dispatch the event at\n * @param {Object} event Event to dispatch\n */\n\nconst directEventMethods = ['blur', 'focus', 'select', 'submit'];\n\nfunction dispatchEvent(element, event) {\n    if(directEventMethods.indexOf(event.type) !== -1 && typeof element[event.type] === 'function' && !event._preventDefault && !event.cancelable) {\n        element[event.type]();\n    } else {\n        element.dispatchEvent(event);\n    }\n}\n\n/**\n * Polyfill for CustomEvent, borrowed from [MDN](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent#Polyfill).\n * Needed to support IE (9, 10, 11) & PhantomJS\n */\n\n(function() {\n    function CustomEvent(event, params = { bubbles: false, cancelable: false, detail: undefined }) {\n        let customEvent = document.createEvent('CustomEvent');\n        customEvent.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n        return customEvent;\n    }\n\n    CustomEvent.prototype = global.CustomEvent && global.CustomEvent.prototype;\n    global.CustomEvent = CustomEvent;\n\n})();\n\n/*\n * Are events bubbling in detached DOM trees?\n * @private\n */\n\nlet isEventBubblingInDetachedTree = (function() {\n    let isBubbling = false,\n        doc = global.document;\n    if (doc) {\n        let parent = doc.createElement('div'),\n            child = parent.cloneNode();\n        parent.appendChild(child);\n        parent.addEventListener('e', function() {\n            isBubbling = true;\n        });\n        child.dispatchEvent(new CustomEvent('e', { bubbles: true }));\n    }\n    return isBubbling;\n})();\n\nlet supportsOtherEventConstructors = (function() {\n    try {\n        new window.MouseEvent('click');\n    } catch (e) {\n        return false;\n    }\n    return true;\n})();\n\n/*\n * Export interface\n */\n\nexport { trigger, triggerHandler };\n","/**\n * @module Ready\n */\n\n/**\n * Execute callback when `DOMContentLoaded` fires for `document`, or immediately if called afterwards.\n *\n * @param handler Callback to execute when initial DOM content is loaded.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $(document).ready(callback);\n */\n\nfunction ready(handler) {\n    if (/complete|loaded|interactive/.test(document.readyState) && document.body) {\n        handler();\n    } else {\n        document.addEventListener('DOMContentLoaded', handler, false);\n    }\n    return this;\n}\n\n/*\n * Export interface\n */\n\nexport { ready };\n","/**\n * @module noConflict\n */\n\nimport { global } from './util';\n\n/*\n * Save the previous value of the global `$` variable, so that it can be restored later on.\n * @private\n */\n\nlet previousLib = global.$;\n\n/**\n * In case another library sets the global `$` variable before DOMtastic does,\n * this method can be used to return the global `$` to that other library.\n *\n * @return {Object} Reference to DOMtastic.\n * @example\n *     var domtastic = $.noConflict();\n */\n\nfunction noConflict() {\n    global.$ = previousLib;\n    return this;\n}\n\n/*\n * Export interface\n */\n\nexport { noConflict };\n","/**\n * @module Selector (extra)\n */\n\nimport { each, toArray } from '../util';\nimport { $, matches } from './index';\n\n/**\n * Return children of each element in the collection, optionally filtered by a selector.\n *\n * @param {String} [selector] Filter\n * @return {Object} New wrapped collection\n * @chainable\n * @example\n *     $('.selector').children();\n *     $('.selector').children('.filter');\n */\n\nfunction children(selector) {\n    let nodes = [];\n    each(this, element => {\n        if(element.children) {\n            each(element.children, child => {\n                if (!selector || (selector && matches(child, selector))) {\n                    nodes.push(child);\n                }\n            });\n        }\n    });\n    return $(nodes);\n}\n\n/**\n * Return child nodes of each element in the collection, including text and comment nodes.\n *\n * @return {Object} New wrapped collection\n * @example\n *     $('.selector').contents();\n */\n\nfunction contents() {\n    let nodes = [];\n    each(this, element => {\n        nodes.push.apply(nodes, toArray(element.childNodes));\n    });\n    return $(nodes);\n}\n\n/**\n * Return a collection containing only the one at the specified index.\n *\n * @param {Number} index\n * @return {Object} New wrapped collection\n * @chainable\n * @example\n *     $('.items').eq(1)\n *     // The second item; result is the same as doing $($('.items')[1]);\n */\n\nfunction eq(index) {\n    return slice.call(this, index, index + 1);\n}\n\n/**\n * Return the DOM element at the specified index.\n *\n * @param {Number} index\n * @return {Node} Element at the specified index\n * @example\n *     $('.items').get(1)\n *     // The second element; result is the same as doing $('.items')[1];\n */\n\nfunction get(index) {\n    return this[index];\n}\n\n/**\n * Return the parent elements of each element in the collection, optionally filtered by a selector.\n *\n * @param {String} [selector] Filter\n * @return {Object} New wrapped collection\n * @chainable\n * @example\n *     $('.selector').parent();\n *     $('.selector').parent('.filter');\n */\n\nfunction parent(selector) {\n    let nodes = [];\n    each(this, element => {\n        if (!selector || (selector && matches(element.parentNode, selector))) {\n            nodes.push(element.parentNode);\n        }\n    });\n    return $(nodes);\n}\n\n/**\n * Return the sibling elements of each element in the collection, optionally filtered by a selector.\n *\n * @param {String} [selector] Filter\n * @return {Object} New wrapped collection\n * @chainable\n * @example\n *     $('.selector').siblings();\n *     $('.selector').siblings('.filter');\n */\n\nfunction siblings(selector) {\n    let nodes = [];\n    each(this, element => {\n        each(element.parentNode.children, sibling => {\n            if (sibling !== element && (!selector || (selector && matches(sibling, selector)))) {\n                nodes.push(sibling);\n            }\n        });\n    });\n    return $(nodes);\n}\n\n/**\n * Create a new, sliced collection.\n *\n * @param {Number} start\n * @param {Number} end\n * @return {Object} New wrapped collection\n * @example\n *     $('.items').slice(1, 3)\n *     // New wrapped collection containing the second, third, and fourth element.\n */\n\nfunction slice(start, end) {\n    return $([].slice.apply(this, arguments));\n}\n\n/*\n * Export interface\n */\n\nexport { children, contents, eq, get, parent, siblings, slice };\n","/**\n * @module Type\n */\n\n/*\n * Determine if the argument passed is a Javascript function object.\n *\n * @param {Object} [obj] Object to test whether or not it is a function.\n * @return {boolean}\n * @example\n *     $.isFunction(function(){});\n *     // true\n * @example\n *     $.isFunction({});\n *     // false\n */\n\nconst isFunction = obj => typeof obj === 'function';\n\n/*\n * Determine whether the argument is an array.\n *\n * @param {Object} [obj] Object to test whether or not it is an array.\n * @return {boolean}\n * @example\n *     $.isArray([]);\n *     // true\n * @example\n *     $.isArray({});\n *     // false\n */\n\nconst isArray = Array.isArray;\n\n/*\n * Export interface\n */\n\nexport { isArray, isFunction };\n","/**\n * @module API\n */\n\nimport { extend } from './util';\n\nlet api = {},\n    $ = {};\n\n// Import modules to build up the API\n\nimport * as array from './array';\nimport BaseClass from './baseClass';\nimport * as css from './css';\nimport * as dom from './dom/index';\nimport * as dom_attr from './dom/attr';\nimport * as dom_class from './dom/class';\nimport * as dom_contains from './dom/contains';\nimport * as dom_data from './dom/data';\nimport * as dom_extra from './dom/extra';\nimport * as dom_html from './dom/html';\nimport * as event from './event/index';\nimport * as event_trigger from './event/trigger';\nimport * as event_ready from './event/ready';\nimport * as noconflict from './noconflict';\nimport * as selector from './selector/index';\nimport * as selector_closest from './selector/closest';\nimport * as selector_extra from './selector/extra';\nimport * as type from './type';\n\nif (typeof selector !== 'undefined') {\n    $ = selector.$;\n    $.matches = selector.matches;\n    api.find = selector.find;\n}\n\nextend($, dom_contains, noconflict, type);\nextend(api, array, css, dom_attr, dom, dom_class, dom_data, dom_extra, dom_html, event, event_trigger, event_ready, selector_closest, selector_extra);\n\n$.fn = api;\n\n// Version\n\n$.version = '__VERSION__';\n\n// Util\n\n$.extend = extend;\n\n// Provide base class to extend from\n\nif(typeof BaseClass !== 'undefined') {\n    $.BaseClass = BaseClass($.fn);\n}\n\n// Export interface\n\nexport default $;\n"],"names":["$","_each","each","selector","forEach","selector.$","selector.matches","selector.find","css"],"mappings":"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"}