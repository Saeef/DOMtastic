{"version":3,"file":"domtastic.js","sources":["../src/util.js","../src/selector/index.js","../src/array.js","../src/baseClass.js","../src/css.js","../src/dom/index.js","../src/dom/attr.js","../src/dom/class.js","../src/dom/contains.js","../src/dom/data.js","../src/dom/extra.js","../src/dom/html.js","../src/selector/closest.js","../src/event/index.js","../src/event/trigger.js","../src/event/ready.js","../src/noconflict.js","../src/selector/extra.js","../src/type.js","../src/index.js"],"sourcesContent":["/*\n * @module Util\n */\n\n/*\n * Reference to the global scope\n * @private\n */\n\nexport const global = new Function('return this')();\n\n/**\n * Convert `NodeList` to `Array`.\n *\n * @param {NodeList|Array} collection\n * @return {Array}\n * @private\n */\n\nexport const toArray = collection => {\n  const length = collection.length;\n  const result = new Array(length);\n  for(let i = 0; i < length; i++) {\n    result[i] = collection[i];\n  }\n  return result;\n};\n\n/**\n * Faster alternative to [].forEach method\n *\n * @param {Node|NodeList|Array} collection\n * @param {Function} callback\n * @return {Node|NodeList|Array}\n * @private\n */\n\nexport const each = (collection, callback, thisArg) => {\n  const length = collection.length;\n  if(length !== undefined && collection.nodeType === undefined) {\n    for(let i = 0; i < length; i++) {\n      callback.call(thisArg, collection[i], i, collection);\n    }\n  } else {\n    callback.call(thisArg, collection, 0, collection);\n  }\n  return collection;\n};\n\n/**\n * Assign enumerable properties from source object(s) to target object\n *\n * @method extend\n * @param {Object} target Object to extend\n * @param {Object} [source] Object to extend from\n * @return {Object} Extended object\n * @example\n *     $.extend({a: 1}, {b: 2});\n *     // {a: 1, b: 2}\n * @example\n *     $.extend({a: 1}, {b: 2}, {a: 3});\n *     // {a: 3, b: 2}\n */\n\nexport const extend = (target, ...sources) => {\n  sources.forEach(src => {\n    for(let prop in src) {\n      target[prop] = src[prop];\n    }\n  });\n  return target;\n};\n\n/**\n * Return the collection without duplicates\n *\n * @param collection Collection to remove duplicates from\n * @return {Node|NodeList|Array}\n * @private\n */\n\nexport const uniq = collection => collection.filter((item, index) => collection.indexOf(item) === index);\n","/**\n * @module Selector\n */\n\nimport { global, each } from '../util';\n\nlet isPrototypeSet = false;\n\nconst reFragment = /^\\s*<(\\w+|!)[^>]*>/;\nconst reSingleTag = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/;\nconst reSimpleSelector = /^[\\.#]?[\\w-]*$/;\n\n/*\n * Versatile wrapper for `querySelectorAll`.\n *\n * @param {String|Node|NodeList|Array} selector Query selector, `Node`, `NodeList`, array of elements, or HTML fragment string.\n * @param {String|Node|NodeList} context=document The context for the selector to query elements.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     var $items = $(.items');\n * @example\n *     var $element = $(domElement);\n * @example\n *     var $list = $(nodeList, document.body);\n * @example\n *     var $element = $('<p>evergreen</p>');\n */\n\nexport const $ = (selector, context = document) => {\n\n  let collection;\n\n  if(!selector) {\n\n    collection = document.querySelectorAll(null);\n\n  } else if(selector instanceof Wrapper) {\n\n    return selector;\n\n  } else if(typeof selector !== 'string') {\n\n    collection = selector.nodeType || selector === window ? [selector] : selector;\n\n  } else if(reFragment.test(selector)) {\n\n    collection = createFragment(selector);\n\n  } else {\n\n    context = typeof context === 'string' ? document.querySelector(context) : context.length ? context[0] : context;\n\n    collection = querySelector(selector, context);\n\n  }\n\n  return wrap(collection);\n\n};\n\n/*\n * Find descendants matching the provided `selector` for each element in the collection.\n *\n * @param {String|Node|NodeList|Array} selector Query selector, `Node`, `NodeList`, array of elements, or HTML fragment string.\n * @return {Object} The wrapped collection\n * @example\n *     $('.selector').find('.deep').$('.deepest');\n */\n\nexport const find = function(selector) {\n  const nodes = [];\n  each(this, node => each(querySelector(selector, node), child => {\n    if(nodes.indexOf(child) === -1) {\n      nodes.push(child);\n    }\n  }));\n  return $(nodes);\n};\n\n/*\n * Returns `true` if the element would be selected by the specified selector string; otherwise, returns `false`.\n *\n * @param {Node} element Element to test\n * @param {String} selector Selector to match against element\n * @return {Boolean}\n *\n * @example\n *     $.matches(element, '.match');\n */\n\nexport const matches = (() => {\n  const context = typeof Element !== 'undefined' ? Element.prototype : global;\n  const _matches = context.matches || context.matchesSelector || context.mozMatchesSelector || context.msMatchesSelector || context.oMatchesSelector || context.webkitMatchesSelector;\n  return (element, selector) => _matches.call(element, selector);\n})();\n\n/*\n * Use the faster `getElementById`, `getElementsByClassName` or `getElementsByTagName` over `querySelectorAll` if possible.\n *\n * @private\n * @param {String} selector Query selector.\n * @param {Node} context The context for the selector to query elements.\n * @return {Object} NodeList, HTMLCollection, or Array of matching elements (depending on method used).\n */\n\nconst querySelector = (selector, context) => {\n\n  const isSimpleSelector = reSimpleSelector.test(selector);\n\n  if(isSimpleSelector) {\n    if(selector[0] === '#') {\n      const element = (context.getElementById ? context : document).getElementById(selector.slice(1));\n      return element ? [element] : [];\n    }\n    if(selector[0] === '.') {\n      return context.getElementsByClassName(selector.slice(1));\n    }\n    return context.getElementsByTagName(selector);\n  }\n\n  return context.querySelectorAll(selector);\n\n};\n\n/*\n * Create DOM fragment from an HTML string\n *\n * @private\n * @param {String} html String representing HTML.\n * @return {NodeList}\n */\n\nconst createFragment = html => {\n\n  if(reSingleTag.test(html)) {\n    return [document.createElement(RegExp.$1)];\n  }\n\n  const elements = [];\n  const container = document.createElement('div');\n  const children = container.childNodes;\n\n  container.innerHTML = html;\n\n  for(let i = 0, l = children.length; i < l; i++) {\n    elements.push(children[i]);\n  }\n\n  return elements;\n};\n\n/*\n * Calling `$(selector)` returns a wrapped collection of elements.\n *\n * @private\n * @param {NodeList|Array} collection Element(s) to wrap.\n * @return Object) The wrapped collection\n */\n\nconst wrap = collection => {\n\n  if(!isPrototypeSet) {\n    Wrapper.prototype = $.fn;\n    Wrapper.prototype.constructor = Wrapper;\n    isPrototypeSet = true;\n  }\n\n  return new Wrapper(collection);\n};\n\n/*\n * Constructor for the Object.prototype strategy\n *\n * @constructor\n * @private\n * @param {NodeList|Array} collection Element(s) to wrap.\n */\n\nexport const Wrapper = function(collection) {\n  let i = 0;\n  const length = collection.length;\n  for(; i < length;) {\n    this[i] = collection[i++];\n  }\n  this.length = length;\n};\n","/**\n * @module Array\n */\n\nimport { each as _each, toArray } from './util';\nimport { $, matches } from './selector/index';\n\nconst ArrayProto = Array.prototype;\n\n/**\n * Checks if the given callback returns a true(-ish) value for each element in the collection.\n *\n * @param {Function} callback Function to execute for each element, invoked with `element` as argument.\n * @param {Object} [thisArg] Value to use as `this` when executing `callback`.\n * @return {Boolean} Whether each element passed the callback check.\n * @example\n *     $('.items').every(function(element) {\n *         return element.hasAttribute('active')\n *     });\n *     // true/false\n */\n\nexport const every = ArrayProto.every;\n\n/**\n * Filter the collection by selector or function, and return a new collection with the result.\n *\n * @param {String|Function} selector Selector or function to filter the collection.\n * @param {Object} [thisArg] Value to use as `this` when executing `callback`.\n * @return {Object} A new wrapped collection\n * @chainable\n * @example\n *     $('.items').filter('.active');\n * @example\n *     $('.items').filter(function(element) {\n *         return element.hasAttribute('active')\n *     });\n */\n\nexport const filter = function(selector, thisArg) {\n  const callback = typeof selector === 'function' ? selector : element => matches(element, selector);\n  return $(ArrayProto.filter.call(this, callback, thisArg));\n};\n\n/**\n * Execute a function for each element in the collection.\n *\n * @param {Function} callback Function to execute for each element, invoked with `element` as argument.\n * @param {Object} [thisArg] Value to use as `this` when executing `callback`.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.items').forEach(function(element) {\n *         element.style.color = 'evergreen';\n *     );\n */\n\nexport const forEach = function(callback, thisArg) {\n  return _each(this, callback, thisArg);\n};\n\nexport const each = forEach;\n\n/**\n * Returns the index of an element in the collection.\n *\n * @param {Node} element\n * @return {Number} The zero-based index, -1 if not found.\n * @example\n *     $('.items').indexOf(element);\n *     // 2\n */\n\nexport const indexOf = ArrayProto.indexOf;\n\n/**\n * Create a new collection by executing the callback for each element in the collection.\n *\n * @param {Function} callback Function to execute for each element, invoked with `element` as argument.\n * @param {Object} [thisArg] Value to use as `this` when executing `callback`.\n * @return {Array} Collection with the return value of the executed callback for each element.\n * @example\n *     $('.items').map(function(element) {\n *         return element.getAttribute('name')\n *     });\n *     // ['ever', 'green']\n */\n\nexport const map = ArrayProto.map;\n\n/**\n * Removes the last element from the collection, and returns that element.\n *\n * @return {Object} The last element from the collection.\n * @example\n *     var lastElement = $('.items').pop();\n */\n\nexport const pop = ArrayProto.pop;\n\n/**\n * Adds one or more elements to the end of the collection, and returns the new length of the collection.\n *\n * @param {Object} element Element(s) to add to the collection\n * @return {Number} The new length of the collection\n * @example\n *     $('.items').push(element);\n */\n\nexport const push = ArrayProto.push;\n\n/**\n * Apply a function against each element in the collection, and this accumulator function has to reduce it\n * to a single value.\n *\n * @param {Function} callback Function to execute on each value in the array, taking four arguments (see example).\n * @param {Mixed} initialValue Object to use as the first argument to the first call of the callback.\n * @example\n *     $('.items').reduce(function(previousValue, element, index, collection) {\n *         return previousValue + element.clientHeight;\n *     }, 0);\n *     // [total height of elements]\n */\n\nexport const reduce = ArrayProto.reduce;\n\n/**\n * Apply a function against each element in the collection (from right-to-left), and this accumulator function has\n * to reduce it to a single value.\n *\n * @param {Function} callback Function to execute on each value in the array, taking four arguments (see example).\n * @param {Mixed} initialValue Object to use as the first argument to the first call of the callback.\n * @example\n *     $('.items').reduceRight(function(previousValue, element, index, collection) {\n *         return previousValue + element.textContent;\n *     }, '')\n *     // [reversed text of elements]\n */\n\nexport const reduceRight = ArrayProto.reduceRight;\n\n/**\n * Reverses an array in place. The first array element becomes the last and the last becomes the first.\n *\n * @return {Object} The wrapped collection, reversed\n * @chainable\n * @example\n *     $('.items').reverse();\n */\n\nexport const reverse = function() {\n  return $(toArray(this).reverse());\n};\n\n/**\n * Removes the first element from the collection, and returns that element.\n *\n * @return {Object} The first element from the collection.\n * @example\n *     var firstElement = $('.items').shift();\n */\n\nexport const shift = ArrayProto.shift;\n\n/**\n * Checks if the given callback returns a true(-ish) value for any of the elements in the collection.\n *\n * @param {Function} callback Function to execute for each element, invoked with `element` as argument.\n * @return {Boolean} Whether any element passed the callback check.\n * @example\n *     $('.items').some(function(element) {\n *         return element.hasAttribute('active')\n *     });\n *     // true/false\n */\n\nexport const some = ArrayProto.some;\n\n/**\n * Adds one or more elements to the beginning of the collection, and returns the new length of the collection.\n *\n * @param {Object} element Element(s) to add to the collection\n * @return {Number} The new length of the collection\n * @example\n *     $('.items').unshift(element);\n */\n\nexport const unshift = ArrayProto.unshift;\n","/**\n * @module BaseClass\n */\n\nimport { $ as selector, Wrapper } from './selector/index';\nimport { extend } from './util';\n\nexport default function(api) {\n\n  /**\n   * Provide subclass for classes or components to extend from.\n   * The opposite and successor of plugins (no need to extend `$.fn` anymore, complete control).\n   *\n   * @return {Class} The class to extend from, including all `$.fn` methods.\n   * @example\n   *     import { BaseClass } from  'domtastic';\n   *\n   *     class MyComponent extends BaseClass {\n   *         doSomething() {\n   *             return this.addClass('.foo');\n   *         }\n   *     }\n   *\n   *     let component = new MyComponent('body');\n   *     component.doSomething();\n   *\n   * @example\n   *     import $ from  'domtastic';\n   *\n   *     class MyComponent extends $.BaseClass {\n   *         progress(value) {\n   *             return this.attr('data-progress', value);\n   *         }\n   *     }\n   *\n   *     let component = new MyComponent(document.body);\n   *     component.progress('ive').append('<p>enhancement</p>');\n   */\n\n  class BaseClass {\n    constructor() {\n      Wrapper.call(this, selector(...arguments));\n    }\n  }\n  extend(BaseClass.prototype, api);\n  return BaseClass;\n}\n","/**\n * @module CSS\n */\n\nimport { each } from './util';\n\nconst isNumeric = value => !isNaN(parseFloat(value)) && isFinite(value);\n\nconst camelize = value => value.replace(/-([\\da-z])/gi, (matches, letter) => letter.toUpperCase());\n\nconst dasherize = value => value.replace(/([a-z\\d])([A-Z])/g, '$1-$2').toLowerCase();\n\n/**\n * Get the value of a style property for the first element, or set one or more style properties for each element in the collection.\n *\n * @param {String|Object} key The name of the style property to get or set. Or an object containing key-value pairs to set as style properties.\n * @param {String} [value] The value of the style property to set.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').css('padding-left'); // get\n *     $('.item').css('color', '#f00'); // set\n *     $('.item').css({'border-width': '1px', display: 'inline-block'}); // set multiple\n */\n\nexport const css = function(key, value) {\n\n  let styleProps, prop, val;\n\n  if(typeof key === 'string') {\n    key = camelize(key);\n\n    if(typeof value === 'undefined') {\n      let element = this.nodeType ? this : this[0];\n      if(element) {\n        val = element.style[key];\n        return isNumeric(val) ? parseFloat(val) : val;\n      }\n      return undefined;\n    }\n\n    styleProps = {};\n    styleProps[key] = value;\n  } else {\n    styleProps = key;\n    for(prop in styleProps) {\n      val = styleProps[prop];\n      delete styleProps[prop];\n      styleProps[camelize(prop)] = val;\n    }\n  }\n\n  each(this, element => {\n    for(prop in styleProps) {\n      if(styleProps[prop] || styleProps[prop] === 0) {\n        element.style[prop] = styleProps[prop];\n      } else {\n        element.style.removeProperty(dasherize(prop));\n      }\n    }\n  });\n\n  return this;\n};\n","/**\n * @module DOM\n */\n\nimport { toArray } from '../util';\nimport { $ } from '../selector/index';\n\nconst forEach = Array.prototype.forEach;\n\n/**\n * Append element(s) to each element in the collection.\n *\n * @param {String|Node|NodeList|Object} element What to append to the element(s).\n * Clones elements as necessary.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').append('<p>more</p>');\n */\n\nexport const append = function(element) {\n  if(this instanceof Node) {\n    if(typeof element === 'string') {\n      this.insertAdjacentHTML('beforeend', element);\n    } else {\n      if(element instanceof Node) {\n        this.appendChild(element);\n      } else {\n        const elements = element instanceof NodeList ? toArray(element) : element;\n        forEach.call(elements, this.appendChild.bind(this));\n      }\n    }\n  } else {\n    _each(this, append, element);\n  }\n  return this;\n};\n\n/**\n * Place element(s) at the beginning of each element in the collection.\n *\n * @param {String|Node|NodeList|Object} element What to place at the beginning of the element(s).\n * Clones elements as necessary.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').prepend('<span>start</span>');\n */\n\nexport const prepend = function(element) {\n  if(this instanceof Node) {\n    if(typeof element === 'string') {\n      this.insertAdjacentHTML('afterbegin', element);\n    } else {\n      if(element instanceof Node) {\n        this.insertBefore(element, this.firstChild);\n      } else {\n        let elements = element instanceof NodeList ? toArray(element) : element;\n        forEach.call(elements.reverse(), prepend.bind(this));\n      }\n    }\n  } else {\n    _each(this, prepend, element);\n  }\n  return this;\n};\n\n/**\n * Place element(s) before each element in the collection.\n *\n * @param {String|Node|NodeList|Object} element What to place as sibling(s) before to the element(s).\n * Clones elements as necessary.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.items').before('<p>prefix</p>');\n */\n\nexport const before = function(element) {\n  if(this instanceof Node) {\n    if(typeof element === 'string') {\n      this.insertAdjacentHTML('beforebegin', element);\n    } else {\n      if(element instanceof Node) {\n        this.parentNode.insertBefore(element, this);\n      } else {\n        const elements = element instanceof NodeList ? toArray(element) : element;\n        forEach.call(elements, before.bind(this));\n      }\n    }\n  } else {\n    _each(this, before, element);\n  }\n  return this;\n};\n\n/**\n * Place element(s) after each element in the collection.\n *\n * @param {String|Node|NodeList|Object} element What to place as sibling(s) after to the element(s). Clones elements as necessary.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.items').after('<span>suf</span><span>fix</span>');\n */\n\nexport const after = function(element) {\n  if(this instanceof Node) {\n    if(typeof element === 'string') {\n      this.insertAdjacentHTML('afterend', element);\n    } else {\n      if(element instanceof Node) {\n        this.parentNode.insertBefore(element, this.nextSibling);\n      } else {\n        const elements = element instanceof NodeList ? toArray(element) : element;\n        forEach.call(elements.reverse(), after.bind(this));\n      }\n    }\n  } else {\n    _each(this, after, element);\n  }\n  return this;\n};\n\n/**\n * Clone a wrapped object.\n *\n * @return {Object} Wrapped collection of cloned nodes.\n * @example\n *     $(element).clone();\n */\n\nexport const clone = function() {\n  return $(_clone(this));\n};\n\n/**\n * Clone an object\n *\n * @param {String|Node|NodeList|Array} element The element(s) to clone.\n * @return {String|Node|NodeList|Array} The cloned element(s)\n * @private\n */\n\nexport const _clone = element => {\n  if(typeof element === 'string') {\n    return element;\n  } else if(element instanceof Node) {\n    return element.cloneNode(true);\n  } else if('length' in element) {\n    return [].map.call(element, el => el.cloneNode(true));\n  }\n  return element;\n};\n\n/**\n * Specialized iteration, applying `fn` in reversed manner to a clone of each element, but the provided one.\n *\n * @param {NodeList|Array} collection\n * @param {Function} fn\n * @param {Node} element\n * @private\n */\n\nexport const _each = (collection, fn, element) => {\n  let l = collection.length;\n  while(l--) {\n    const elm = l === 0 ? element : _clone(element);\n    fn.call(collection[l], elm);\n  }\n};\n","/**\n * @module Attr\n */\n\nimport { each } from '../util';\n\n/**\n * Get the value of an attribute for the first element, or set one or more attributes for each element in the collection.\n *\n * @param {String|Object} key The name of the attribute to get or set. Or an object containing key-value pairs to set as attributes.\n * @param {String} [value] The value of the attribute to set.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').attr('attrName'); // get\n *     $('.item').attr('attrName', 'attrValue'); // set\n *     $('.item').attr({attr1: 'value1', 'attr-2': 'value2'}); // set multiple\n */\n\nexport const attr = function(key, value) {\n\n  if(typeof key === 'string' && typeof value === 'undefined') {\n    const element = this.nodeType ? this : this[0];\n    return element ? element.getAttribute(key) : undefined;\n  }\n\n  return each(this, element => {\n    if(typeof key === 'object') {\n      for(let attr in key) {\n        element.setAttribute(attr, key[attr]);\n      }\n    } else {\n      element.setAttribute(key, value);\n    }\n  });\n};\n\n/**\n * Remove attribute from each element in the collection.\n *\n * @param {String} key Attribute name\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.items').removeAttr('attrName');\n */\n\nexport const removeAttr = function(key) {\n  return each(this, element => element.removeAttribute(key));\n};\n","/**\n * @module Class\n */\n\nimport { each } from '../util';\n\n/**\n * Add a class to the element(s)\n *\n * @param {String} value Space-separated class name(s) to add to the element(s).\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').addClass('bar');\n *     $('.item').addClass('bar foo');\n */\n\nexport const addClass = function(value) {\n  if(value && value.length) {\n    each(value.split(' '), _each.bind(this, 'add'));\n  }\n  return this;\n};\n\n/**\n * Remove a class from the element(s)\n *\n * @param {String} value Space-separated class name(s) to remove from the element(s).\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.items').removeClass('bar');\n *     $('.items').removeClass('bar foo');\n */\n\nexport const removeClass = function(value) {\n  if(value && value.length) {\n    each(value.split(' '), _each.bind(this, 'remove'));\n  }\n  return this;\n};\n\n/**\n * Toggle a class at the element(s)\n *\n * @param {String} value Space-separated class name(s) to toggle at the element(s).\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').toggleClass('bar');\n *     $('.item').toggleClass('bar foo');\n */\n\nexport const toggleClass = function(value) {\n  if(value && value.length) {\n    each(value.split(' '), _each.bind(this, 'toggle'));\n  }\n  return this;\n};\n\n/**\n * Check if the element(s) have a class.\n *\n * @param {String} value Check if the DOM element contains the class name. When applied to multiple elements,\n * returns `true` if _any_ of them contains the class name.\n * @return {Boolean} Whether the element's class attribute contains the class name.\n * @example\n *     $('.item').hasClass('bar');\n */\n\nexport const hasClass = function(value) {\n  return (this.nodeType ? [this] : this).some(element => element.classList.contains(value));\n};\n\n/**\n * Specialized iteration, applying `fn` of the classList API to each element.\n *\n * @param {String} fnName\n * @param {String} className\n * @private\n */\n\nconst _each = function(fnName, className) {\n  return each(this, element => element.classList[fnName](className));\n};\n","/**\n * @module contains\n */\n\n/**\n * Test whether an element contains another element in the DOM.\n *\n * @param {Element} container The element that may contain the other element.\n * @param {Element} element The element that may be a descendant of the other element.\n * @return {Boolean} Whether the `container` element contains the `element`.\n * @example\n *     $.contains(parentElement, childElement);\n *     // true/false\n */\n\nexport const contains = (container, element) => {\n  if(!container || !element || container === element) {\n      return false;\n    } else if (container.contains) {\n      return container.contains(element);\n    } else if (container.compareDocumentPosition) {\n      return !(container.compareDocumentPosition(element) & Node.DOCUMENT_POSITION_DISCONNECTED);\n    }\n  return false;\n};\n","/**\n * @module Data\n */\n\nimport { each } from '../util';\n\nconst DATAKEYPROP = '__DOMTASTIC_DATA__';\n\n/**\n * Get data from first element, or set data for each element in the collection.\n *\n * @param {String} key The key for the data to get or set.\n * @param {String} [value] The data to set.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').data('attrName'); // get\n *     $('.item').data('attrName', {any: 'data'}); // set\n */\n\nexport const data = function(key, value) {\n\n  if(typeof key === 'string' && typeof value === 'undefined') {\n    const element = this.nodeType ? this : this[0];\n    return element && element[DATAKEYPROP] ? element[DATAKEYPROP][key] : undefined;\n  }\n\n  return each(this, element => {\n    element[DATAKEYPROP] = element[DATAKEYPROP] || {};\n    element[DATAKEYPROP][key] = value;\n  });\n};\n\n/**\n * Get property from first element, or set property on each element in the collection.\n *\n * @param {String} key The name of the property to get or set.\n * @param {String} [value] The value of the property to set.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').prop('attrName'); // get\n *     $('.item').prop('attrName', 'attrValue'); // set\n */\n\nexport const prop = function(key, value) {\n\n  if(typeof key === 'string' && typeof value === 'undefined') {\n    const element = this.nodeType ? this : this[0];\n    return element && element ? element[key] : undefined;\n  }\n\n  return each(this, element => element[key] = value);\n};\n","/**\n * @module DOM (extra)\n */\n\nimport { each } from '../util';\nimport { append, before } from './index';\nimport { $ } from '../selector/index';\n\n/**\n * Append each element in the collection to the specified element(s).\n *\n * @param {Node|NodeList|Object} element What to append the element(s) to. Clones elements as necessary.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').appendTo(container);\n */\n\nexport const appendTo = function(element) {\n  const context = typeof element === 'string' ? $(element) : element;\n  append.call(context, this);\n  return this;\n};\n\n/*\n * Empty each element in the collection.\n *\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').empty();\n */\n\nexport const empty = function() {\n  return each(this, element => element.innerHTML = '');\n};\n\n/**\n * Remove the collection from the DOM.\n *\n * @return {Array} Array containing the removed elements\n * @example\n *     $('.item').remove();\n */\n\nexport const remove = function() {\n  return each(this, element => {\n    if(element.parentNode) {\n      element.parentNode.removeChild(element);\n    }\n  });\n};\n\n/**\n * Replace each element in the collection with the provided new content, and return the array of elements that were replaced.\n *\n * @return {Array} Array containing the replaced elements\n */\n\nexport const replaceWith = function() {\n  return before.apply(this, arguments).remove();\n};\n\n/**\n * Get the `textContent` from the first, or set the `textContent` of each element in the collection.\n *\n * @param {String} [value]\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').text('New content');\n */\n\nexport const text = function(value) {\n\n  if(value === undefined) {\n    return this[0].textContent;\n  }\n\n  return each(this, element => element.textContent = '' + value);\n};\n\n/**\n * Get the `value` from the first, or set the `value` of each element in the collection.\n *\n * @param {String} [value]\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('input.firstName').value('New value');\n */\n\nexport const val = function(value) {\n\n  if(value === undefined) {\n    return this[0].value;\n  }\n\n  return each(this, element => element.value = value);\n};\n","/**\n * @module HTML\n */\n\nimport { each } from '../util';\n\n/*\n * Get the HTML contents of the first element, or set the HTML contents for each element in the collection.\n *\n * @param {String} [fragment] HTML fragment to set for the element. If this argument is omitted, the HTML contents are returned.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').html();\n *     $('.item').html('<span>more</span>');\n */\n\nexport const html = function(fragment) {\n\n  if(typeof fragment !== 'string') {\n    const element = this.nodeType ? this : this[0];\n    return element ? element.innerHTML : undefined;\n  }\n\n  return each(this, element => element.innerHTML = fragment);\n};\n","/**\n * @module closest\n */\n\nimport { $, matches } from './index';\nimport { each, uniq } from '../util';\n\n/**\n * Return the closest element matching the selector (starting by itself) for each element in the collection.\n *\n * @param {String} selector Filter\n * @param {Object} [context] If provided, matching elements must be a descendant of this element\n * @return {Object} New wrapped collection (containing zero or one element)\n * @chainable\n * @example\n *     $('.selector').closest('.container');\n */\n\nexport const closest = (() => {\n\n  const closest = function(selector, context) {\n    const nodes = [];\n    each(this, node => {\n      while(node && node !== context) {\n        if(matches(node, selector)) {\n          nodes.push(node);\n          break;\n        }\n        node = node.parentElement;\n      }\n    });\n    return $(uniq(nodes));\n  };\n\n  return typeof Element === 'undefined' || !Element.prototype.closest ? closest : function(selector, context) {\n    if(!context) {\n      const nodes = [];\n      each(this, node => {\n        const n = node.closest(selector);\n        if(n) {\n          nodes.push(n);\n        }\n      });\n      return $(uniq(nodes));\n    } else {\n      return closest.call(this, selector, context);\n    }\n  };\n})();\n","/**\n * @module Events\n */\n\nimport { each } from '../util';\nimport { closest } from '../selector/closest';\n\n/**\n * Shorthand for `addEventListener`. Supports event delegation if a filter (`selector`) is provided.\n *\n * @param {String} eventNames List of space-separated event types to be added to the element(s)\n * @param {String} [selector] Selector to filter descendants that delegate the event to this element.\n * @param {Function} handler Event handler\n * @param {Boolean} useCapture=false\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').on('click', callback);\n *     $('.container').on('click focus', '.item', handler);\n */\n\nexport const on = function(eventNames, selector, handler, useCapture, once) {\n\n  if(typeof selector === 'function') {\n    handler = selector;\n    selector = null;\n  }\n\n  let parts,\n    namespace,\n    eventListener;\n\n  eventNames.split(' ').forEach(eventName => {\n\n    parts = eventName.split('.');\n    eventName = parts[0] || null;\n    namespace = parts[1] || null;\n\n    eventListener = proxyHandler(handler);\n\n    each(this, element => {\n\n      if(selector) {\n        eventListener = delegateHandler.bind(element, selector, eventListener);\n      }\n\n      if(once) {\n        const listener = eventListener;\n        eventListener = event => {\n          off.call(element, eventNames, selector, handler, useCapture);\n          listener.call(element, event);\n        }\n      }\n\n      element.addEventListener(eventName, eventListener, useCapture || false);\n\n      getHandlers(element).push({\n        eventName,\n        handler,\n        eventListener,\n        selector,\n        namespace\n      });\n    });\n\n  }, this);\n\n  return this;\n};\n\n/**\n * Shorthand for `removeEventListener`.\n *\n * @param {String} eventNames List of space-separated event types to be removed from the element(s)\n * @param {String} [selector] Selector to filter descendants that undelegate the event to this element.\n * @param {Function} handler Event handler\n * @param {Boolean} useCapture=false\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').off('click', callback);\n *     $('#my-element').off('myEvent myOtherEvent');\n *     $('.item').off();\n */\n\nexport const off = function(eventNames = '', selector, handler, useCapture) {\n\n  if(typeof selector === 'function') {\n    handler = selector;\n    selector = null;\n  }\n\n  let parts,\n    namespace,\n    handlers;\n\n  eventNames.split(' ').forEach(eventName => {\n\n    parts = eventName.split('.');\n    eventName = parts[0] || null;\n    namespace = parts[1] || null;\n\n    return each(this, element => {\n\n      handlers = getHandlers(element);\n\n      each(handlers.filter(item => {\n        return (\n        (!eventName || item.eventName === eventName) &&\n        (!namespace || item.namespace === namespace) &&\n        (!handler || item.handler === handler) &&\n        (!selector || item.selector === selector));\n      }), item => {\n        element.removeEventListener(item.eventName, item.eventListener, useCapture || false);\n        handlers.splice(handlers.indexOf(item), 1);\n      });\n\n      if(!eventName && !namespace && !selector && !handler) {\n        clearHandlers(element);\n      } else if(handlers.length === 0) {\n        clearHandlers(element);\n      }\n\n    });\n\n  }, this);\n\n  return this;\n};\n\n/**\n * Add event listener and execute the handler at most once per element.\n *\n * @param eventNames\n * @param selector\n * @param handler\n * @param useCapture\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').one('click', callback);\n */\n\nexport const one = function(eventNames, selector, handler, useCapture) {\n  return on.call(this, eventNames, selector, handler, useCapture, 1);\n};\n\n/**\n * Get event handlers from an element\n *\n * @private\n * @param {Node} element\n * @return {Array}\n */\n\nconst eventKeyProp = '__domtastic_event__';\nlet id = 1;\nlet handlers = {};\nlet unusedKeys = [];\n\nexport const getHandlers = element => {\n  if(!element[eventKeyProp]) {\n    element[eventKeyProp] = unusedKeys.length === 0 ? ++id : unusedKeys.pop();\n  }\n  const key = element[eventKeyProp];\n  return handlers[key] || (handlers[key] = []);\n};\n\n/**\n * Clear event handlers for an element\n *\n * @private\n * @param {Node} element\n */\n\nexport const clearHandlers = element => {\n  const key = element[eventKeyProp];\n  if(handlers[key]) {\n    handlers[key] = null;\n    element[eventKeyProp] = null;\n    unusedKeys.push(key);\n  }\n};\n\n/**\n * Function to create a handler that augments the event object with some extra methods,\n * and executes the callback with the event and the event data (i.e. `event.detail`).\n *\n * @private\n * @param handler Callback to execute as `handler(event, data)`\n * @return {Function}\n */\n\nexport const proxyHandler = handler => function(event) {\n  return handler.call(this, augmentEvent(event), event.detail);\n};\n\n/**\n * Attempt to augment events and implement something closer to DOM Level 3 Events.\n *\n * @private\n * @param {Object} event\n * @return {Function}\n */\n\nconst augmentEvent = (() => {\n\n  let methodName,\n    eventMethods = {\n      preventDefault: 'isDefaultPrevented',\n      stopImmediatePropagation: 'isImmediatePropagationStopped',\n      stopPropagation: 'isPropagationStopped'\n    },\n    returnTrue = () => true,\n    returnFalse = () => false;\n\n  return event => {\n    if(!event.isDefaultPrevented || event.stopImmediatePropagation || event.stopPropagation) {\n      for(methodName in eventMethods) {\n        (function(methodName, testMethodName, originalMethod) {\n          event[methodName] = function() {\n            this[testMethodName] = returnTrue;\n            return originalMethod && originalMethod.apply(this, arguments);\n          };\n          event[testMethodName] = returnFalse;\n        }(methodName, eventMethods[methodName], event[methodName]));\n      }\n      if(event._preventDefault) {\n        event.preventDefault();\n      }\n    }\n    return event;\n  };\n\n})();\n\n/**\n * Function to test whether delegated events match the provided `selector` (filter),\n * if the event propagation was stopped, and then actually call the provided event handler.\n * Use `this` instead of `event.currentTarget` on the event object.\n *\n * @private\n * @param {String} selector Selector to filter descendants that undelegate the event to this element.\n * @param {Function} handler Event handler\n * @param {Event} event\n */\n\nexport const delegateHandler = (selector, handler, event) => {\n  const eventTarget = event._target || event.target;\n  const currentTarget = closest.call([eventTarget], selector, this)[0];\n  if(currentTarget && currentTarget !== this) {\n    if(currentTarget === eventTarget || !(event.isPropagationStopped && event.isPropagationStopped())) {\n      handler.call(currentTarget, event);\n    }\n  }\n};\n\nexport const bind = on;\nexport const unbind = off;\n","/**\n * @module trigger\n */\n\nimport { global, each } from '../util';\nimport { contains } from '../dom/contains';\n\nconst reMouseEvent = /^(?:mouse|pointer|contextmenu)|click/;\nconst reKeyEvent = /^key/;\n\n/**\n * Trigger event at element(s)\n *\n * @param {String} type Type of the event\n * @param {Object} data Data to be sent with the event (`params.detail` will be set to this).\n * @param {Object} [params] Event parameters (optional)\n * @param {Boolean} params.bubbles=true Does the event bubble up through the DOM or not.\n * @param {Boolean} params.cancelable=true Is the event cancelable or not.\n * @param {Mixed} params.detail=undefined Additional information about the event.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').trigger('anyEventType');\n */\n\nexport const trigger = function(type, data, {bubbles = true, cancelable = true, preventDefault = false} = {}) {\n\n  const EventConstructor = getEventConstructor(type);\n  const event = new EventConstructor(type, {\n    bubbles,\n    cancelable,\n    preventDefault,\n    detail: data\n  });\n\n  event._preventDefault = preventDefault;\n\n  return each(this, element => {\n    if(!bubbles || isEventBubblingInDetachedTree || isAttachedToDocument(element)) {\n      dispatchEvent(element, event);\n    } else {\n      triggerForPath(element, type, {\n        bubbles,\n        cancelable,\n        preventDefault,\n        detail: data\n      });\n    }\n  });\n};\n\nconst getEventConstructor = type => supportsOtherEventConstructors ? (reMouseEvent.test(type) ? MouseEvent : (reKeyEvent.test(type) ? KeyboardEvent : CustomEvent)) : CustomEvent;\n\n/**\n * Trigger event at first element in the collection. Similar to `trigger()`, except:\n *\n * - Event does not bubble\n * - Default event behavior is prevented\n * - Only triggers handler for first matching element\n *\n * @param {String} type Type of the event\n * @param {Object} data Data to be sent with the event\n * @example\n *     $('form').triggerHandler('submit');\n */\n\nexport const triggerHandler = function(type, data) {\n  if(this[0]) {\n    trigger.call(this[0], type, data, {\n      bubbles: false,\n      preventDefault: true\n    });\n  }\n};\n\n/**\n * Check whether the element is attached to or detached from) the document\n *\n * @private\n * @param {Node} element Element to test\n * @return {Boolean}\n */\n\nconst isAttachedToDocument = element => {\n  if(element === window || element === document) {\n    return true;\n  }\n  return contains(element.ownerDocument.documentElement, element);\n};\n\n/**\n * Dispatch the event at the element and its ancestors.\n * Required to support delegated events in browsers that don't bubble events in detached DOM trees.\n *\n * @private\n * @param {Node} element First element to dispatch the event at\n * @param {String} type Type of the event\n * @param {Object} [params] Event parameters (optional)\n * @param {Boolean} params.bubbles=true Does the event bubble up through the DOM or not.\n * Will be set to false (but shouldn't matter since events don't bubble anyway).\n * @param {Boolean} params.cancelable=true Is the event cancelable or not.\n * @param {Mixed} params.detail=undefined Additional information about the event.\n */\n\nconst triggerForPath = (element, type, params = {}) => {\n  params.bubbles = false;\n  const event = new CustomEvent(type, params);\n  event._target = element;\n  do {\n    dispatchEvent(element, event);\n  } while(element = element.parentNode);\n};\n\n/**\n * Dispatch event to element, but call direct event methods instead if available\n * (e.g. \"blur()\", \"submit()\") and if the event is non-cancelable.\n *\n * @private\n * @param {Node} element Element to dispatch the event at\n * @param {Object} event Event to dispatch\n */\n\nconst directEventMethods = ['blur', 'focus', 'select', 'submit'];\n\nconst dispatchEvent = (element, event) => {\n  if(directEventMethods.indexOf(event.type) !== -1 && typeof element[event.type] === 'function' && !event._preventDefault && !event.cancelable) {\n    element[event.type]();\n  } else {\n    element.dispatchEvent(event);\n  }\n};\n\n/**\n * Polyfill for CustomEvent, borrowed from [MDN](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent#Polyfill).\n * Needed to support IE (9, 10, 11) & PhantomJS\n */\n\n(() => {\n  const CustomEvent = (event, params = {\n    bubbles: false,\n    cancelable: false,\n    detail: undefined\n  }) => {\n    let customEvent = document.createEvent('CustomEvent');\n    customEvent.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n    return customEvent;\n  };\n\n  CustomEvent.prototype = global.CustomEvent && global.CustomEvent.prototype;\n  global.CustomEvent = CustomEvent;\n\n})();\n\n/*\n * Are events bubbling in detached DOM trees?\n * @private\n */\n\nconst isEventBubblingInDetachedTree = (() =>{\n  let isBubbling = false;\n  const doc = global.document;\n  if(doc) {\n    const parent = doc.createElement('div');\n    const child = parent.cloneNode();\n    parent.appendChild(child);\n    parent.addEventListener('e', function() {\n      isBubbling = true;\n    });\n    child.dispatchEvent(new CustomEvent('e', {bubbles: true}));\n  }\n  return isBubbling;\n})();\n\nconst supportsOtherEventConstructors = (() => {\n  try {\n    new window.MouseEvent('click');\n  } catch(e) {\n    return false;\n  }\n  return true;\n})();\n","/**\n * @module Ready\n */\n\n/**\n * Execute callback when `DOMContentLoaded` fires for `document`, or immediately if called afterwards.\n *\n * @param handler Callback to execute when initial DOM content is loaded.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $(document).ready(callback);\n */\n\nexport const ready = function(handler) {\n  if(/complete|loaded|interactive/.test(document.readyState) && document.body) {\n    handler();\n  } else {\n    document.addEventListener('DOMContentLoaded', handler, false);\n  }\n  return this;\n};\n","/**\n * @module noConflict\n */\n\nimport { global } from './util';\n\n/*\n * Save the previous value of the global `$` variable, so that it can be restored later on.\n * @private\n */\n\nconst previousLib = global.$;\n\n/**\n * In case another library sets the global `$` variable before DOMtastic does,\n * this method can be used to return the global `$` to that other library.\n *\n * @return {Object} Reference to DOMtastic.\n * @example\n *     var domtastic = $.noConflict();\n */\n\nexport const noConflict = function() {\n  global.$ = previousLib;\n  return this;\n};\n","/**\n * @module Selector (extra)\n */\n\nimport { each, toArray } from '../util';\nimport { $, matches } from './index';\n\n/**\n * Return children of each element in the collection, optionally filtered by a selector.\n *\n * @param {String} [selector] Filter\n * @return {Object} New wrapped collection\n * @chainable\n * @example\n *     $('.selector').children();\n *     $('.selector').children('.filter');\n */\n\nexport const children = function(selector) {\n  const nodes = [];\n  each(this, element => {\n    if(element.children) {\n      each(element.children, child => {\n        if(!selector || (selector && matches(child, selector))) {\n          nodes.push(child);\n        }\n      });\n    }\n  });\n  return $(nodes);\n};\n\n/**\n * Return child nodes of each element in the collection, including text and comment nodes.\n *\n * @return {Object} New wrapped collection\n * @example\n *     $('.selector').contents();\n */\n\nexport const contents = function() {\n  const nodes = [];\n  each(this, element => nodes.push.apply(nodes, toArray(element.childNodes)));\n  return $(nodes);\n};\n\n/**\n * Return a collection containing only the one at the specified index.\n *\n * @param {Number} index\n * @return {Object} New wrapped collection\n * @chainable\n * @example\n *     $('.items').eq(1)\n *     // The second item; result is the same as doing $($('.items')[1]);\n */\n\nexport const eq = function(index) {\n  return slice.call(this, index, index + 1);\n};\n\n/**\n * Return the DOM element at the specified index.\n *\n * @param {Number} index\n * @return {Node} Element at the specified index\n * @example\n *     $('.items').get(1)\n *     // The second element; result is the same as doing $('.items')[1];\n */\n\nexport const get = function(index) {\n  return this[index];\n};\n\n/**\n * Return the parent elements of each element in the collection, optionally filtered by a selector.\n *\n * @param {String} [selector] Filter\n * @return {Object} New wrapped collection\n * @chainable\n * @example\n *     $('.selector').parent();\n *     $('.selector').parent('.filter');\n */\n\nexport const parent = function(selector) {\n  const nodes = [];\n  each(this, element => {\n    if(!selector || (selector && matches(element.parentNode, selector))) {\n      nodes.push(element.parentNode);\n    }\n  });\n  return $(nodes);\n};\n\n/**\n * Return the sibling elements of each element in the collection, optionally filtered by a selector.\n *\n * @param {String} [selector] Filter\n * @return {Object} New wrapped collection\n * @chainable\n * @example\n *     $('.selector').siblings();\n *     $('.selector').siblings('.filter');\n */\n\nexport const siblings = function(selector) {\n  const nodes = [];\n  each(this, element => each(element.parentNode.children, sibling => {\n    if(sibling !== element && (!selector || (selector && matches(sibling, selector)))) {\n      nodes.push(sibling);\n    }\n  }));\n  return $(nodes);\n};\n\n/**\n * Create a new, sliced collection.\n *\n * @param {Number} start\n * @param {Number} end\n * @return {Object} New wrapped collection\n * @example\n *     $('.items').slice(1, 3)\n *     // New wrapped collection containing the second, third, and fourth element.\n */\n\nexport const slice = function(start, end) {\n  return $([].slice.apply(this, arguments));\n};\n","/**\n * @module Type\n */\n\n/*\n * Determine if the argument passed is a Javascript function object.\n *\n * @param {Object} [obj] Object to test whether or not it is a function.\n * @return {boolean}\n * @example\n *     $.isFunction(function(){});\n *     // true\n * @example\n *     $.isFunction({});\n *     // false\n */\n\nexport const isFunction = obj => typeof obj === 'function';\n\n/*\n * Determine whether the argument is an array.\n *\n * @param {Object} [obj] Object to test whether or not it is an array.\n * @return {boolean}\n * @example\n *     $.isArray([]);\n *     // true\n * @example\n *     $.isArray({});\n *     // false\n */\n\nexport const isArray = Array.isArray;\n","/**\n * @module API\n */\n\nimport { extend } from './util';\n\nconst api = {};\nlet $ = {};\n\n// Import modules to build up the API\n\nimport * as array from './array';\nimport BaseClass from './baseClass';\nimport * as css from './css';\nimport * as dom from './dom/index';\nimport * as dom_attr from './dom/attr';\nimport * as dom_class from './dom/class';\nimport * as dom_contains from './dom/contains';\nimport * as dom_data from './dom/data';\nimport * as dom_extra from './dom/extra';\nimport * as dom_html from './dom/html';\nimport * as event from './event/index';\nimport * as event_trigger from './event/trigger';\nimport * as event_ready from './event/ready';\nimport * as noconflict from './noconflict';\nimport * as selector from './selector/index';\nimport * as selector_closest from './selector/closest';\nimport * as selector_extra from './selector/extra';\nimport * as type from './type';\n\nif (typeof selector !== 'undefined') {\n  $ = selector.$;\n  $.matches = selector.matches;\n  api.find = selector.find;\n}\n\nextend($, dom_contains, noconflict, type);\nextend(api, array, css, dom_attr, dom, dom_class, dom_data, dom_extra, dom_html, event, event_trigger, event_ready, selector_closest, selector_extra);\n\n$.fn = api;\n\n// Version\n\n$.version = '__VERSION__';\n\n// Util\n\n$.extend = extend;\n\n// Provide base class to extend from\n\nif(typeof BaseClass !== 'undefined') {\n  $.BaseClass = BaseClass($.fn);\n}\n\n// Export interface\n\nexport default $;\n"],"names":["$","_each","each","selector","forEach","selector.$","selector.matches","selector.find","css"],"mappings":"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"}